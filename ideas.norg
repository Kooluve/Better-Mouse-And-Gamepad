*  BMAG v2 Rewrite
** Synopsis  
   After fixing a large portion of the codebase, the way the input is handled is
   still irreparably unintuitive. This document will serve as a straightforward
   notepad for the design of a version 2.0, rewritten correctly from scratch.

** Basic Structure
*** More Binds!
    The mod will provide a simple extended keybind menu that allows any key (except 
    `ESC`) to be bound to a feature. This can be easily done by having a `listening`
    flag toggle behaviour of the input hook, storing the keypress into a string
    variable and flipping the flag back.

    This should be done via Steamodded's `UIBox_button(args)` function, and the keybind 
    should be displayed in the UI once it it not `Nil`. The button should just flip
    the listener on, nothing more.

    This change actually gives mapping the input a purpose.

    Bindings should be differentiable between click and hold upon binding by checking
    release time when binding. The subroutine for binding the key should start
    an imprecise monotonic timer (can be done via a simple incrementing integer),
    which then determines the keypress type. Threshold duration should be configurable
    in the top of the menu as "Click/Hold Threshold".

    Modifier keys can be dealt with in a later release once I have the basic setup 
    going. That's probably a bridge to cross in v2.1.0 ;).

*** Better Input Handling
    Trying to make sense of the current code is a fruitless endeavour, barely helped
    by my cleanup attempt on v1.1. Input handling is a hook into the base Love2D
    input handler, and only the following should be done:

    ~ Store the old Love2D call in a function variable prefixed with `old_`.
    ~ Check the input map to see if the key is bound via `click`, `hold`, `both`, or `Nil`.
    ~~ If only bound on a click and not a hold, match to the feature on keypress.
    ~~ If bound to a hold only, wait for the threshold duration to elapse or release,
       whichever happens first (early release isn't a hold and cancels the action).
    ~~ If both clicking and holding a key are bound to seperate features, wait like
       above and execute the correct feature after threshold duration or key release.
    ~~ If neither are bound, fall through to the `old_` Love2D handler.

** Configuration
   Steamodded is a common dependency with other mods, so removing it is unnecessary 
   at the moment. As such, keeping the config in the GUI makes sense over removing
   the dependency and using file configs.

   The config menu does need a rework, but that shouldn't be a massive pain unless
   Love2D blocks keypresses in menus (it shouldn't).

** Funky New Lua Queue
   Because `table.remove()` has a complexity of O(n), a custom queue implementation
   could be achieved wherein upon popping an element, it is instead replaced with
   `nil`. The queue would contain:

   - `n`: The current size of the table; this must be tracked seperately from the
     table, as there will be `nil` values at the beginning of the queue that would
     fuck with any `table.getn()` calls.
   - `p`: The current number of popped values in the start of the table.
   - `m_p`: The number at which a subsequent `pop` instruction causes a realloc.
   - `table`: A table implementation from the Lua stdlib.
